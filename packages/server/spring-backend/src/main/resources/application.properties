# MYSQL
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:3306/${MYSQL_DB}?useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.maximum-pool-size=2000
#spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.max-lifetime=50000
#spring.datasource.hikari.idle-timeout=30000

# REDIS
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

# JPA
spring.jpa.database=mysql
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# DEVTOOLS
spring.devtools.restart.enabled=true
spring.devtools.restart.log-condition-evaluation-delta=false

# TOMCAT/SPRING
server.port=80
server.tomcat.threads.max=2000
#server.tomcat.max-connections=20000
#server.tomcat.threads.min-spare=100
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.max-file-size=50MB

# LOGGER
logging.level.kr.ac.ssu.ssutoday=warn

# JWT/SECURITY
spring.jwt.secret=${JWT_SECRET_KEY}
spring.client.key=${CLIENT_KEY}

# KAFKA
spring.kafka.bootstrap-servers=${KAFKA_HOST}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.group-id=spring
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# S3
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}
cloud.aws.stack.auto=false